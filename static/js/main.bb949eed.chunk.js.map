{"version":3,"sources":["components/Section/Section.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/SearchBar/SearchBar.module.css","components/ImageGallery/ImageGallery.module.css","services/apiFetch.js","components/SearchBar/SearchBar.js","helpers/mapper.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Section/Section.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/App/App.js","index.js"],"names":["module","exports","fetchImg","searchName","page","axios","get","SearchBar","state","value","handleChangeInput","currentTarget","setState","handleSubmit","e","onSubmit","props","preventDefault","trim","className","s","searchBar","searchForm","this","searchButton","type","buttonLabel","formInput","autoComplete","autoFocus","placeholder","onChange","Component","mapper","hits","map","imageId","id","smallImg","webformatURL","modalImg","largeImageURL","tags","ImageGalleryItem","onModalClick","galleryImage","src","alt","onClick","ImageGallery","images","onModalOpen","gallery","item","Section","children","section","container","Button","onLoadMore","button","Spinner","color","height","width","timeout","modalRoot","document","querySelector","Modal","onClose","window","addEventListener","code","console","log","createPortal","overlay","target","modal","App","query","loading","modalShow","error","status","fetchImages","imageApi","then","data","prevState","catch","finally","reset","handleNextPage","toggleModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","message","length","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb949eed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1ckd0\",\"container\":\"Section_container__3b6IU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1VDzz\",\"modal\":\"Modal_modal__1oIXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__37tfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__wMuFE\",\"searchForm\":\"SearchBar_searchForm__3qyjp\",\"searchButton\":\"SearchBar_searchButton__29_lw\",\"buttonLabel\":\"SearchBar_buttonLabel__1Wcii\",\"formInput\":\"SearchBar_formInput__3I1Uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__2IlUM\",\"item\":\"ImageGallery_item__3-XRl\",\"galleryImage\":\"ImageGallery_galleryImage__1MyT5\"};","import axios from 'axios';\r\n\r\nconst API_KEY = '21924211-a56ef8093bc4c324081574229';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst PER_PAGE = 12;\r\n\r\nexport const fetchImg = (searchName, page) =>\r\n  axios.get(\r\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchName}&page=${page}&per_page=${PER_PAGE}&key=${API_KEY}`,\r\n  );\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './SearchBar.module.css';\r\n\r\nexport default class SearchBar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  handleChangeInput = ({ currentTarget: { value } }) => {\r\n    this.setState({ value: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { onSubmit } = this.props;\r\n    const { value } = this.state;\r\n    e.preventDefault();\r\n    if (value.trim()) {\r\n      onSubmit(value);\r\n      this.setState({ value: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.searchBar}>\r\n        <form className={s.searchForm} onSubmit={this.handleSubmit}>\r\n          <button className={s.searchButton} type=\"submit\">\r\n            <span className={s.buttonLabel}>Search</span>\r\n          </button>\r\n          <input\r\n            className={s.formInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChangeInput}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","const mapper = hits => {\r\n  return hits.map(\r\n    ({\r\n      id: imageId,\r\n      webformatURL: smallImg,\r\n      largeImageURL: modalImg,\r\n      tags,\r\n    }) => ({ imageId, smallImg, modalImg, tags }),\r\n  );\r\n};\r\n\r\nexport default mapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\n\r\nconst ImageGalleryItem = ({ smallImg, modalImg, tags, onModalClick }) => {\r\n  return (\r\n    <img\r\n      className={s.galleryImage}\r\n      src={smallImg}\r\n      alt={tags}\r\n      onClick={() => onModalClick(modalImg, tags)}\r\n    />\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  smallImg: PropTypes.string.isRequired,\r\n  modalImg: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  onModalClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ images, onModalOpen }) => (\r\n  <ul className={s.gallery}>\r\n    {images.map(({ imageId, smallImg, modalImg, tags }) => (\r\n      <li className={s.item} key={imageId}>\r\n        <ImageGalleryItem\r\n          smallImg={smallImg}\r\n          tags={tags}\r\n          modalImg={modalImg}\r\n          onModalClick={onModalOpen}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imageId: PropTypes.number.isRequired,\r\n      smallImg: PropTypes.string.isRequired,\r\n      modalImg: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onModalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ children }) => (\r\n  <section className={s.section}>\r\n    <div className={s.container}>{children}</div>\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onLoadMore }) => (\r\n  <button className={s.button} type=\"button\" onClick={() => onLoadMore()}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Loader from 'react-loader-spinner';\r\nimport React from 'react';\r\n\r\nconst Spinner = () => (\r\n  <Loader\r\n    type=\"ThreeDots\"\r\n    color=\"#3f51b5\"\r\n    height={100}\r\n    width={100}\r\n    timeout={3000}\r\n  />\r\n);\r\n\r\nexport default Spinner;\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal');\r\n\r\nconst Modal = ({ onClose, modalImg, tags }) => {\r\n\r\n  // useEffect(() => {\r\n  //   window.addEventListener('keydown', e => {\r\n  //   if (e.code === 'Escape') {\r\n  //     console.log('modalClose')\r\n  //     onClose();\r\n  //   }\r\n  // })\r\n  // }, [onClose]);\r\n  \r\n  const modalClose = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('modalClose')\r\n      onClose();\r\n    }\r\n  };\r\n  //   componentDidMount() {\r\n    window.addEventListener('keydown', modalClose);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   window.removeEventListener('keydown', this.modalClose);\r\n  // }\r\n  \r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      console.log('handleBackdropClick')\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.overlay} onClick={handleBackdropClick}>\r\n      <div className={s.modal}>\r\n        <img src={modalImg} alt={tags} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Modal;\r\n\r\n// export default class Modal extends Component {\r\n//   static propTypes = {\r\n//     onClose: PropTypes.func.isRequired,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.modalClose);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.modalClose);\r\n//   }\r\n\r\n//   modalClose = e => {\r\n//     const { onClose } = this.props;\r\n//     if (e.code === 'Escape') {\r\n//       onClose();\r\n//     }\r\n//   };\r\n\r\n//   handleBackdropClick = e => {\r\n//     const { onClose } = this.props;\r\n//     if (e.currentTarget === e.target) {\r\n//       onClose();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     const { modalImg, tags } = this.props;\r\n//     return createPortal(\r\n//       <div className={s.overlay} onClick={this.handleBackdropClick}>\r\n//         <div className={s.modal}>\r\n//           <img src={modalImg} alt={tags} />\r\n//         </div>\r\n//       </div>,\r\n//       modalRoot,\r\n//     );\r\n//   }\r\n// }\r\n","import * as imageApi from '../../services/apiFetch';\r\nimport React, { Component } from 'react';\r\nimport SearchBar from '../SearchBar';\r\nimport mapper from '../../helpers/mapper';\r\nimport ImageGallery from '../ImageGallery';\r\nimport Section from '../Section';\r\nimport Button from '../Button';\r\nimport Loader from '../Loader';\r\nimport Modal from '../Modal';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    query: '',\r\n    modalImg: '',\r\n    tags: '',\r\n    page: 1,\r\n    loading: false,\r\n    modalShow: false,\r\n    error: '',\r\n    status: 'idle'\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { query, page } = this.state;\r\n\r\n    if (query !== prevState.query || page !== prevState.page) {\r\n      this.fetchImages(query, page);\r\n    }\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  fetchImages = (query, page) => {\r\n    this.setState({ loading: true, status: 'pending' });\r\n    imageApi\r\n      .fetchImg(query, page)\r\n      .then(({ data: { hits } }) => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...mapper(hits)],\r\n          status: 'resolved',\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error, status: 'rejected' }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      images: [],\r\n      query: '',\r\n      page: 1,\r\n    });\r\n  };\r\n\r\n  handleSubmit = query => {\r\n    this.reset();\r\n    this.setState({ query });\r\n  };\r\n\r\n  handleNextPage = () => {\r\n    this.setState(prevState => ({ page: prevState.page + 1 }));\r\n  };\r\n\r\n  toggleModal = (modalImg, tags) => {\r\n    this.setState(({ modalShow }) => ({\r\n      modalShow: !modalShow,\r\n      modalImg,\r\n      tags,\r\n    }));\r\n  };\r\n\r\n  // ------------------------------------------------ Вариант 1 ------------------------------------------------------\r\n\r\n  render() {\r\n    const { images, loading, modalShow, modalImg, tags, error } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <SearchBar onSubmit={this.handleSubmit} />\r\n        <Section>\r\n          {error && <h2>{error.message}</h2>}\r\n          {!!images.length && (\r\n            <ImageGallery images={images} onModalOpen={this.toggleModal} />\r\n          )}\r\n          {loading && <Loader />}\r\n          {images.length % 12 === 0 && !!images.length && (\r\n            <Button onLoadMore={this.handleNextPage} />\r\n          )}\r\n        </Section>\r\n        {modalShow && (\r\n          <Modal onClose={this.toggleModal} modalImg={modalImg} tags={tags} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  // ------------------------------------------Вариант 2----------------------------------------------------\r\n\r\n  // render() {\r\n  //   const { images, status, modalShow, modalImg, tags, error } = this.state;\r\n  //   if (this.state.status === 'idle') {\r\n  //     return <>\r\n  //       <SearchBar\r\n  //         onSubmit={this.handleSubmit}\r\n  //       />;\r\n  //       <Section />\r\n  //     </>\r\n  //   }\r\n\r\n  //   if (status === 'pending') {\r\n  //     return <>\r\n  //       <SearchBar\r\n  //         onSubmit={this.handleSubmit}\r\n  //       />;\r\n  //       <Section>\r\n  //         <ImageGallery\r\n  //           images={images}\r\n  //           onModalOpen={this.toggleModal}\r\n  //         />\r\n  //         <Loader />\r\n  //       </Section>\r\n  //     </>\r\n  //   }\r\n\r\n  //   if (status === 'resolved') {\r\n  //     return <>\r\n  //       <SearchBar\r\n  //         onSubmit={this.handleSubmit}\r\n  //       />;\r\n  //       <Section>\r\n  //         <ImageGallery\r\n  //           images={images}\r\n  //           onModalOpen={this.toggleModal}\r\n  //         />\r\n  //         {(images.length % 12 === 0 && !!images.length) &&\r\n  //           <Button\r\n  //             onLoadMore={this.handleNextPage}\r\n  //           />}\r\n  //       </Section>\r\n  //       {\r\n  //         modalShow &&\r\n  //         <Modal\r\n  //           onClose={this.toggleModal}\r\n  //           modalImg={modalImg}\r\n  //           tags={tags}\r\n  //         />\r\n  //       }\r\n  //     </>\r\n  //   }\r\n\r\n  //   if (status === \"rejected\") {\r\n  //     return <>\r\n  //       <SearchBar\r\n  //         onSubmit={this.handleSubmit}\r\n  //       />\r\n  //       <Section>\r\n  //         <h2>{error.message}</h2>\r\n  //       </Section>\r\n  //     </>\r\n  //   }\r\n  // }\r\n\r\n  // ------------------------------ Вариант 3-------------------------------------------\r\n  // render() {\r\n  //   const { images, status, modalShow, modalImg, tags, error } = this.state;\r\n  //   return (\r\n  //     <>\r\n  //       <SearchBar\r\n  //         onSubmit={this.handleSubmit}\r\n  //       />\r\n  //       <Section>\r\n  //         {(status === 'pending') &&\r\n  //           <>\r\n  //             <ImageGallery\r\n  //               images={images}\r\n  //               onModalOpen={this.toggleModal}\r\n  //             />\r\n  //             <Loader />\r\n  //           </>\r\n  //         }\r\n\r\n  //         {\r\n  //           (status === \"rejected\") &&\r\n  //           <h2>\r\n  //             {error.message}\r\n  //           </h2>\r\n  //         }\r\n\r\n  //         {(status === 'resolved') &&\r\n  //           <>\r\n  //             <ImageGallery\r\n  //               images={images}\r\n  //               onModalOpen={this.toggleModal}\r\n  //             />\r\n  //             {(images.length % 12 === 0 && !!images.length) &&\r\n  //               <Button\r\n  //                 onLoadMore={this.handleNextPage}\r\n  //               />\r\n  //             }\r\n  //             {\r\n  //               modalShow &&\r\n  //               <Modal\r\n  //                 onClose={this.toggleModal}\r\n  //                 modalImg={modalImg}\r\n  //                 tags={tags}\r\n  //               />\r\n  //             }\r\n  //           </>\r\n  //         }\r\n  //       </Section>\r\n  //     </>\r\n  //   )\r\n  // };\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}